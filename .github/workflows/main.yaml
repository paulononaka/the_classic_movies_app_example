name: dev

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: kuhnroyal/flutter-fvm-config-action/setup@v3
        with:
          cache: true
          pub-cache: true

      - name: Install FVM
        run: |
          dart pub global activate fvm
          echo "$HOME/.pub-cache/bin" >> "$GITHUB_PATH"

      - name: Warm FVM cache
        run: |
          fvm install --setup --skip-pub-get
          fvm dart pub global activate melos

      - name: Bootstrap packages
        run: melos bootstrap

      - name: Setup Environment Variables
        run: |
          echo "TMDB_API_KEY=${{ secrets.TMDB_API_KEY }}" > .env
          echo "TMDB_BASE_URL=${{ secrets.TMDB_BASE_URL }}" >> .env
          echo "TMDB_IMAGE_URL=${{ secrets.TMDB_IMAGE_URL }}" >> .env
          
          # Add Firebase configuration variables
          echo "FIREBASE_WEB_API_KEY=${{ secrets.FIREBASE_WEB_API_KEY }}" >> .env
          echo "FIREBASE_WEB_APP_ID=${{ secrets.FIREBASE_WEB_APP_ID }}" >> .env
          echo "FIREBASE_ANDROID_API_KEY=${{ secrets.FIREBASE_ANDROID_API_KEY }}" >> .env
          echo "FIREBASE_ANDROID_APP_ID=${{ secrets.FIREBASE_ANDROID_APP_ID }}" >> .env
          echo "FIREBASE_IOS_API_KEY=${{ secrets.FIREBASE_IOS_API_KEY }}" >> .env
          echo "FIREBASE_IOS_APP_ID=${{ secrets.FIREBASE_IOS_APP_ID }}" >> .env
          echo "FIREBASE_IOS_BUNDLE_ID=${{ secrets.FIREBASE_IOS_BUNDLE_ID }}" >> .env
          echo "FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> .env
          echo "FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" >> .env
          echo "FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}" >> .env
          echo "FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "FIREBASE_MEASUREMENT_ID=${{ secrets.FIREBASE_MEASUREMENT_ID }}" >> .env
          
      - name: Setup Firebase Configuration
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > android/app/google-services.json
          echo "${{ secrets.GOOGLE_SERVICE_INFO_PLIST }}" | base64 --decode > ios/Runner/GoogleService-Info.plist
          echo "${{ secrets.FIREBASE_JSON }}" | base64 --decode > firebase.json

      - name: Lint
        run: melos lint

      - name: Unit tests
        env:
          RUNNING_ON_CICD: true
        run: melos tests